{"version":3,"file":"main.js","sources":["main.js"],"sourcesContent":["const burger = document.querySelector(\".header__burger\")\r\nlet header = document.querySelector(\".header\")\r\nif (burger && header) {\r\n  burger.addEventListener(\"click\", () => {\r\n    header.classList.toggle(\"active\")\r\n    document.querySelector(\"html\").classList.toggle(\"lock\")\r\n  })\r\n}\r\n\r\nconst observer = new IntersectionObserver((entries) => {\r\n  let animationDelay = 0;\r\n  entries.forEach(entry => {\r\n    if (entry.isIntersecting) {\r\n      if (entry.target.classList.contains(\"animation-group\")) {\r\n        animationDelay = animationDelay + 100\r\n      } else {\r\n        animationDelay = 0;\r\n      }\r\n      setTimeout(() => {\r\n        entry.target.classList.add(\"animated\")\r\n      }, animationDelay);\r\n      observer.unobserve(entry.target)\r\n    }\r\n  });\r\n}, {\r\n  threshold: 0.4,\r\n  rootMargin: '50px',\r\n});\r\n\r\nconst animatedItems = document.querySelectorAll(\".to_animate\")\r\n\r\nif (animatedItems.length > 0) {\r\n  animatedItems.forEach(item => {\r\n    observer.observe(item)\r\n  })\r\n}\r\n\r\nconst CursorFunction = () => {\r\n    const projects = document.querySelectorAll(\".cursor-item\");\r\n    if (!projects.length) return;\r\n    const cursor = document.querySelector(\".cursor\");\r\n    if (!cursor) return;\r\n    const cursorWrap = document.querySelector(\".cursor__wrap\");\r\n    const cursorMove = document.querySelector(\".cursor__move\");\r\n    if (!cursorWrap || !cursorMove) return;\r\n\r\n    let halfWindowWidth = window.innerWidth / 2;\r\n    let halfWindowHeight = window.innerHeight / 2;\r\n    const cursorRect = cursor.getBoundingClientRect();\r\n\r\n\r\n    const updateWindowDimensions = () => {\r\n        halfWindowWidth = window.innerWidth / 2;\r\n        halfWindowHeight = window.innerHeight / 2;\r\n    };\r\n\r\n\r\n    window.addEventListener('resize', updateWindowDimensions);\r\n\r\n    projects.forEach((project) => {\r\n        const projectInner = project.querySelector(\".cursor-item__inner\");\r\n        if (!projectInner) return;\r\n        \r\n        const handleMouseMove = (e) => {\r\n            if (window.innerWidth < 1024) return;\r\n            const tabElementsExist = document.querySelector('.cursor-item__ignore') !== null;\r\n            const isOverTab = tabElementsExist ? e.target.closest('.cursor-item__ignore') : false;\r\n            const shouldHideCursor = isOverTab;\r\n\r\n            cursorWrap.style.opacity = shouldHideCursor ? \"0\" : \"1\";\r\n            cursorWrap.style.transform = shouldHideCursor ? \"scale(0)\" : \"scale(1)\";\r\n\r\n            if (!shouldHideCursor) {\r\n                const x = e.clientX - halfWindowWidth - cursorRect.left;\r\n                const y = e.clientY - halfWindowHeight - cursorRect.top;\r\n\r\n                cursorMove.style.transform = `\r\n                    translate3d(${x}px, ${y}px, 0px) \r\n                    scale3d(1, 1, 1) \r\n                    rotateX(0deg) rotateY(0deg) rotateZ(0deg) \r\n                    skew(0deg, 0deg)\r\n                `;\r\n            }\r\n        };\r\n\r\n        const handleMouseLeave = () => {\r\n            if (window.innerWidth < 1024) return;\r\n            cursorWrap.style.opacity = \"0\";\r\n            cursorWrap.style.transform = \"scale(0)\";\r\n        };\r\n\r\n        projectInner.addEventListener(\"mousemove\", handleMouseMove);\r\n        projectInner.addEventListener(\"mouseleave\", handleMouseLeave);\r\n    });\r\n\r\n    return () => {\r\n        window.removeEventListener('resize', updateWindowDimensions);\r\n    };\r\n};\r\n\r\nCursorFunction();\r\n"],"names":["burger","document","querySelector","header","observer","addEventListener","classList","toggle","IntersectionObserver","let","animationDelay","entries","forEach","entry","isIntersecting","target","contains","setTimeout","add","unobserve","threshold","rootMargin","animatedItems","querySelectorAll","CursorFunction","length","item","observe","projects","cursor","cursorWrap","cursorMove","halfWindowWidth","window","innerWidth","halfWindowHeight","innerHeight","cursorRect","getBoundingClientRect","updateWindowDimensions","projectInner","project","x","shouldHideCursor","e","closest","style","opacity","transform","clientX","left","y","clientY","top","removeEventListener"],"mappings":"AAAA,IAAMA,OAASC,SAASC,cAAc,iBAAiB,EACnDC,OAASF,SAASC,cAAc,SAAS,EAQvCE,UAPFJ,QAAUG,QACZH,OAAOK,iBAAiB,QAAS,KAC/BF,OAAOG,UAAUC,OAAO,QAAQ,EAChCN,SAASC,cAAc,MAAM,EAAEI,UAAUC,OAAO,MAAM,CACxD,CAAC,EAGc,IAAIC,qBAAqB,IACxCC,IAAIC,EAAiB,EACrBC,EAAQC,QAAQC,IACVA,EAAMC,iBACJD,EAAME,OAAOT,UAAUU,SAAS,iBAAiB,EACnDN,GAAkC,IAElCA,EAAiB,EAEnBO,WAAW,KACTJ,EAAME,OAAOT,UAAUY,IAAI,UAAU,CACvC,EAAGR,CAAc,EACjBN,SAASe,UAAUN,EAAME,MAAM,EAEnC,CAAC,CACH,EAAG,CACDK,UAAW,GACXC,WAAY,MACd,CAAC,GAEKC,cAAgBrB,SAASsB,iBAAiB,aAAa,EAQvDC,gBANqB,EAAvBF,cAAcG,QAChBH,cAAcV,QAAQc,IACpBtB,SAASuB,QAAQD,CAAI,CACvB,CAAC,EAGoB,KACnB,IAAME,EAAW3B,SAASsB,iBAAiB,cAAc,EACzD,GAAKK,EAASH,OAAd,CACA,IAAMI,EAAS5B,SAASC,cAAc,SAAS,EAC/C,GAAK2B,EAAL,CACA,IAAMC,EAAa7B,SAASC,cAAc,eAAe,EACnD6B,EAAa9B,SAASC,cAAc,eAAe,EACzD,GAAK4B,GAAeC,EAApB,CAEAtB,IAAIuB,EAAkBC,OAAOC,WAAa,EACtCC,EAAmBF,OAAOG,YAAc,EACtCC,EAAaR,EAAOS,sBAAsB,EAG1CC,EAAyB,KAC3BP,EAAkBC,OAAOC,WAAa,EACtCC,EAAmBF,OAAOG,YAAc,CAC5C,EAyCA,OAtCAH,OAAO5B,iBAAiB,SAAUkC,CAAsB,EAExDX,EAAShB,QAAQ,IACP4B,EAAeC,EAAQvC,cAAc,qBAAqB,EAC3DsC,IA8BLA,EAAanC,iBAAiB,YA5BN,IACpB,IASUqC,EATNT,OAAOC,WAAa,OAGlBS,EAFsE,OAAnD1C,SAASC,cAAc,sBAAsB,GACjC0C,EAAE7B,OAAO8B,QAAQ,sBAAsB,EAG5Ef,EAAWgB,MAAMC,QAAUJ,EAAmB,IAAM,IACpDb,EAAWgB,MAAME,UAAYL,EAAmB,WAAa,WAExDA,KACKD,EAAIE,EAAEK,QAAUjB,EAAkBK,EAAWa,KAC7CC,EAAIP,EAAEQ,QAAUjB,EAAmBE,EAAWgB,IAEpDtB,EAAWe,MAAME;kCACCN,QAAQS;;;;kBAMlC,CAQ0D,EAC1DX,EAAanC,iBAAiB,aAPL,KACjB4B,OAAOC,WAAa,OACxBJ,EAAWgB,MAAMC,QAAU,IAC3BjB,EAAWgB,MAAME,UAAY,WACjC,CAG4D,EAChE,CAAC,EAEM,KACHf,OAAOqB,oBAAoB,SAAUf,CAAsB,CAC/D,CArDsC,CAHnB,CAFS,CA2DhC,GAEAf,eAAe"}