{"version":3,"file":"main.js","sources":["main.js"],"sourcesContent":["const burger = document.querySelector(\".header__burger\")\r\nlet header = document.querySelector(\".header\")\r\nif (burger && header) {\r\n  burger.addEventListener(\"click\", () => {\r\n    header.classList.toggle(\"active\")\r\n    document.querySelector(\"html\").classList.toggle(\"lock\")\r\n  })\r\n}\r\n\r\nconst observer = new IntersectionObserver((entries) => {\r\n  let animationDelay = 0;\r\n  entries.forEach(entry => {\r\n    if (entry.isIntersecting) {\r\n      if (entry.target.classList.contains(\"animation-group\")) {\r\n        animationDelay = animationDelay + 100\r\n      } else {\r\n        animationDelay = 0;\r\n      }\r\n      setTimeout(() => {\r\n        entry.target.classList.add(\"animated\")\r\n      }, animationDelay);\r\n      observer.unobserve(entry.target)\r\n    }\r\n  });\r\n}, {\r\n  threshold: 0.5,\r\n  rootMargin: '50px',\r\n});\r\n\r\nconst animatedItems = document.querySelectorAll(\".to_animate\")\r\n\r\nif (animatedItems.length > 0) {\r\n  animatedItems.forEach(item => {\r\n    observer.observe(item)\r\n  })\r\n}\r\n\r\n"],"names":["burger","document","querySelector","header","observer","addEventListener","classList","toggle","IntersectionObserver","let","animationDelay","entries","forEach","entry","isIntersecting","target","contains","setTimeout","add","unobserve","threshold","rootMargin","animatedItems","querySelectorAll","length","item","observe"],"mappings":"AAAA,IAAMA,OAASC,SAASC,cAAc,iBAAiB,EACnDC,OAASF,SAASC,cAAc,SAAS,EAQvCE,UAPFJ,QAAUG,QACZH,OAAOK,iBAAiB,QAAS,KAC/BF,OAAOG,UAAUC,OAAO,QAAQ,EAChCN,SAASC,cAAc,MAAM,EAAEI,UAAUC,OAAO,MAAM,CACxD,CAAC,EAGc,IAAIC,qBAAqB,IACxCC,IAAIC,EAAiB,EACrBC,EAAQC,QAAQC,IACVA,EAAMC,iBACJD,EAAME,OAAOT,UAAUU,SAAS,iBAAiB,EACnDN,GAAkC,IAElCA,EAAiB,EAEnBO,WAAW,KACTJ,EAAME,OAAOT,UAAUY,IAAI,UAAU,CACvC,EAAGR,CAAc,EACjBN,SAASe,UAAUN,EAAME,MAAM,EAEnC,CAAC,CACH,EAAG,CACDK,UAAW,GACXC,WAAY,MACd,CAAC,GAEKC,cAAgBrB,SAASsB,iBAAiB,aAAa,EAElC,EAAvBD,cAAcE,QAChBF,cAAcV,QAAQa,IACpBrB,SAASsB,QAAQD,CAAI,CACvB,CAAC"}